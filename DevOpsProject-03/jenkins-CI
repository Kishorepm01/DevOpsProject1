pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages{
        stage('clean Workspace'){
            steps{
                cleanWs()
            }
        }
        stage('checkout from Git'){
            steps{
                git branch: 'main', url: 'https://github.com/Kishorepm01/DevOpsProjects/DevOpsProject-03/Zomato-Clone.git'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Terraform \
                    -Dsonar.projectKey=Terraform '''
                }
            }
        }
        stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token' 
                }
            } 
        }
         stage("Install Dependencies"){
           steps {
                sh "npm install"
            } 
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '---scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage('Docker Build & Push'){
            steps{
                script{
                    withDockerRegistery(credentialsID: 'docker', toolName: 'docker'){
                        sh "docker build -t zomato ."
                        sh "docker tag zomato kishoreprasadmacha/zomato:latest "
                        sh "docker push kishoreprasadmacha/zomato:latest "
                    }
                }
            }
        }
        stage('TRIVY'){
            steps{
                sh 'trivy image kishoreprasadmacha/zomato:latest > trivy.txt'
            }
        }
        stage('Deploy to container'){
            steps{
                sh 'docker run -d --name zomato -p 3000:3000 kishoreprasadmacha/zomato:latest'
            }
        }
    }
}